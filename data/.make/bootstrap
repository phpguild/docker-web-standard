$(shell if [ ! -f .env.local ]; then cp .env .env.local; fi)
include .env
include .env.local
export

CONTAINER_PHP := "php"
CONTAINER_DATABASE := "database"
DOCKER_PHP := "${APP_NAME}_${CONTAINER_PHP}_${APP_INSTANCE}"
DOCKER_DATABASE := "${APP_NAME}_${CONTAINER_DATABASE}_${APP_INSTANCE}"

## ----------------------------------------------------------
## Status
## ----------------------------------------------------------
.PHONY: listening

listening:
	@echo "Server listening on http://127.0.0.1:${APP_PORT}"

## ----------------------------------------------------------
## Composer
## ----------------------------------------------------------
.PHONY: composer/install

composer/install:
ifeq (prod, $(APP_ENV))
	docker-compose run --rm -v "${SSH_AUTH_SOCK}:/ssh-agent" -e "SSH_AUTH_SOCK=/ssh-agent" ${CONTAINER_PHP} bash -c "APP_ENV=prod php -d memory_limit=-1 /usr/bin/composer --no-dev --optimize-autoloader -v install"
else
	docker-compose run --rm -u 1000 -v "${SSH_AUTH_SOCK}:/ssh-agent" -e "SSH_AUTH_SOCK=/ssh-agent" ${CONTAINER_PHP} php -d memory_limit=-1 /usr/bin/composer update
endif

## ----------------------------------------------------------
## Docker
## ----------------------------------------------------------
.PHONY: docker/start docker/stop docker/down

docker/start:
	docker-compose up -d --build --remove-orphans

docker/stop:
	docker-compose stop

docker/down:
	docker-compose down

docker/restart:
	make docker/stop
	make docker/start
